// <auto-generated />
using System;
using Exercice05_PizzeriaAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Exercice05_PizzeriaAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Exercice05_PizzeriaAPI.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int?>("PizzaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PizzaId");

                    b.ToTable("ingredient");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            Name = "Coulis de tomate"
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            Name = "Oignons"
                        },
                        new
                        {
                            Id = 3,
                            Description = "",
                            Name = "Olives"
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            Name = "Poivrons"
                        },
                        new
                        {
                            Id = 5,
                            Description = "",
                            Name = "Mozzarella veggie"
                        },
                        new
                        {
                            Id = 6,
                            Description = "",
                            Name = "Mozzarella"
                        },
                        new
                        {
                            Id = 7,
                            Description = "",
                            Name = "Haché de boeuf Label Rouge"
                        },
                        new
                        {
                            Id = 8,
                            Description = "",
                            Name = "Lardons fumés"
                        },
                        new
                        {
                            Id = 9,
                            Description = "",
                            Name = "Oeuf"
                        });
                });

            modelBuilder.Entity("Exercice05_PizzeriaAPI.Models.IngredientPizza", b =>
                {
                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("PizzaId")
                        .HasColumnType("int");

                    b.HasKey("IngredientId", "PizzaId");

                    b.HasIndex("PizzaId");

                    b.ToTable("ingredient_pizza");

                    b.HasData(
                        new
                        {
                            IngredientId = 1,
                            PizzaId = 1
                        },
                        new
                        {
                            IngredientId = 2,
                            PizzaId = 1
                        },
                        new
                        {
                            IngredientId = 3,
                            PizzaId = 1
                        },
                        new
                        {
                            IngredientId = 4,
                            PizzaId = 1
                        },
                        new
                        {
                            IngredientId = 5,
                            PizzaId = 1
                        },
                        new
                        {
                            IngredientId = 1,
                            PizzaId = 2
                        },
                        new
                        {
                            IngredientId = 2,
                            PizzaId = 2
                        },
                        new
                        {
                            IngredientId = 3,
                            PizzaId = 2
                        },
                        new
                        {
                            IngredientId = 6,
                            PizzaId = 2
                        },
                        new
                        {
                            IngredientId = 7,
                            PizzaId = 2
                        },
                        new
                        {
                            IngredientId = 8,
                            PizzaId = 2
                        },
                        new
                        {
                            IngredientId = 9,
                            PizzaId = 2
                        });
                });

            modelBuilder.Entity("Exercice05_PizzeriaAPI.Models.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("picture");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("price");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("pizza");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Une pizza qu'elle est bonne avec plein de bons légumes congelés",
                            Name = "4 saisons",
                            Picture = "https://commons.wikimedia.org/wiki/File:Pizza_Quattro_Stagioni.jpg",
                            Price = 12m,
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Une pizza qu'elle est très très avec plein de viande morte",
                            Name = "Carnivore",
                            Picture = "https://commons.wikimedia.org/wiki/File:P_20230902_191843_1.jpg",
                            Price = 15m,
                            Type = 2
                        });
                });

            modelBuilder.Entity("Exercice05_PizzeriaAPI.Models.Ingredient", b =>
                {
                    b.HasOne("Exercice05_PizzeriaAPI.Models.Pizza", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("PizzaId");
                });

            modelBuilder.Entity("Exercice05_PizzeriaAPI.Models.IngredientPizza", b =>
                {
                    b.HasOne("Exercice05_PizzeriaAPI.Models.Pizza", null)
                        .WithMany("IngredientPizzas")
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Exercice05_PizzeriaAPI.Models.Pizza", b =>
                {
                    b.Navigation("IngredientPizzas");

                    b.Navigation("Ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
